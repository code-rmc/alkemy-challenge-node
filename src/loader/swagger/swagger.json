{
  "openapi": "3.0.0",
  "info": {
    "title": "API REST Movie",
    "description": "This is an movie API project",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/",
      "description": "Development"
    },
    {
      "url": "https://challenge-alkemy-rmc.herokuapp.com/api/",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations Login user"
    },
    {
      "name": "Movies",
      "description": "Operations about Movies"
    }
  ],
  "security": {
    "accessCode": ["read", "write"]
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "description": "User authenticated in the system",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User authenticated in the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLogin"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "user authenticated"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed Email / Password does not correct."
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/movie": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get a list of all movies",
        "description": "The array of all movies in JSON format.",
        "security": [],
        "responses": {
          "200": {
            "description": "The array of all movies in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allMovie"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Movies"],
        "summary": "add a movie",
        "description": "Adds an movie to the system",
        "operationId": "addMovie",
        "requestBody": {
          "description": "Add an movie to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Movie"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/movie/{id}": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get a movie",
        "description": "The movie in JSON format.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the movie that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The movie in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MovieFull"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": ["Movies"],
        "summary": "update an existing movie by providing the id",
        "description": "update an item to the system",
        "operationId": "updatemovie",
        "requestBody": {
          "description": "update an movie to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieBodyUpdate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the movie that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Movie update"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      },
      "delete": {
        "tags": ["Movies"],
        "summary": "delete an movie",
        "description": "delete an item to the system",
        "operationId": "deleteMovie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the movie that need to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "movie deleted"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "403": {
            "description": "Authentication failed! User without privileges"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/character": {
      "get": {
        "tags": ["Character"],
        "summary": "Get a list of all character",
        "description": "The array of all character in JSON format.",
        "security": [],
        "responses": {
          "200": {
            "description": "The array of all character in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allCharacter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Character"],
        "summary": "add a character",
        "description": "Adds an character to the system",
        "operationId": "addCharacter",
        "requestBody": {
          "description": "Add an character to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "character created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/character/{id}": {
      "get": {
        "tags": ["Character"],
        "summary": "Get a character",
        "description": "The character in JSON format.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the character that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The character in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CharacterById"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": ["Character"],
        "summary": "update an existing character by providing the id",
        "description": "update an item to the system",
        "operationId": "updateCharacter",
        "requestBody": {
          "description": "update an character to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharacterBodyUpdate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the character that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Character update"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      },
      "delete": {
        "tags": ["Character"],
        "summary": "delete an character",
        "description": "delete an item to the system",
        "operationId": "deleteCharacter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the character that need to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "character deleted"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "403": {
            "description": "Authentication failed! User without privileges"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/type": {
      "get": {
        "tags": ["Type"],
        "summary": "Get a list of all types",
        "description": "The array of all types in JSON format.",
        "security": [],
        "responses": {
          "200": {
            "description": "The array of all types in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/allTypes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": ["Type"],
        "summary": "add a types",
        "description": "Adds an types to the system",
        "operationId": "addTypes",
        "requestBody": {
          "description": "Add an types to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Type"
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    },
    "/type/{id}": {
      "get": {
        "tags": ["Type"],
        "summary": "Get a type",
        "description": "The type in JSON format.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the type that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The type in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TypeById"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": ["Type"],
        "summary": "update an existing type by providing the id",
        "description": "update an item to the system",
        "operationId": "updateType",
        "requestBody": {
          "description": "update an type to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeBodyUpdate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the type that need to be update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Type update"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "500": {
            "description": "Error server"
          }
        }
      },
      "delete": {
        "tags": ["Type"],
        "summary": "delete an type",
        "description": "delete an item to the system",
        "operationId": "deleteType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the type that need to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "type deleted"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "Authentication failed! Token required"
          },
          "403": {
            "description": "Authentication failed! User without privileges"
          },
          "500": {
            "description": "Error server"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Mulan"
          },
          "picture": {
            "type": "string",
            "example": "https://static.wikia.nocookie.net/disney/images/c/cb/Mulan_ver1_xlg.jpg/revision/latest?cb=20160923003413&path-prefix=es"
          },
          "creation_date": {
            "type": "date",
            "example": "1998-06-19"
          },
          "score": {
            "type": "decimal",
            "example": "4.1"
          },
          "idType": {
            "type": "integer",
            "example": "1"
          }
        }
      },
      "MovieFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example":"1"
          },
          "title": {
            "type": "string",
            "example": "Mulan"
          },
          "picture": {
            "type": "string",
            "example": "https://static.wikia.nocookie.net/disney/images/c/cb/Mulan_ver1_xlg.jpg/revision/latest?cb=20160923003413&path-prefix=es"
          },
          "creation_date": {
            "type": "date",
            "example": "1998-06-19"
          },
          "score": {
            "type": "decimal",
            "example": "4.1"
          },
          "Type": {
            "type": "array",
            "example": [{"type": "Movies"}]
          },
          "Genres": {
            "type": "array",
            "example": [{"genre": "Animation"}]
          },
          "Characters": {
            "type": "array",
            "example": [
              {
                "id": 1,
                "name": "Fa Mulan",
                "age": "16",
                "weight": "30",
                "picture": "https://static.wikia.nocookie.net/disney/images/8/83/FaMul%C3%A1n.png/revision/latest?cb=20130830100817&path-prefix=es"
              }
            ]
          }
        }
      },
      "allMovie": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "title": {
            "type": "string",
            "example": "Mulan"
          },
          "picture": {
            "type": "string",
            "example": "https://static.wikia.nocookie.net/disney/images/c/cb/Mulan_ver1_xlg.jpg/revision/latest?cb=20160923003413&path-prefix=es"
          },
          "creation_date": {
            "type": "date",
            "example": "1998-06-19T03:00:00.000Z"
          }
        }
      },
      "MovieBodyUpdate": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Mulan"
          },
          "picture": {
            "type": "string",
             "example": "https://static.wikia.nocookie.net/disney/images/c/cb/Mulan_ver1_xlg.jpg/revision/latest?cb=20160923003413&path-prefix=es"
          },
          "creation_date": {
            "type": "date",
            "example": "1998-06-19"
          }
        }
      },
      "Character": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Fa Mulán"
          },
          "age": {
            "type": "string",
            "example": "18"
          },
          "history": {
            "type": "text",
            "example": "Es una joven muchacha china que se alista en el ejército en lugar de su padre disfrazada de chico para la lucha contra los Hunos, ya que se preocupa de su padre."
          },
          "picture": {
            "type": "string",
            "example": "https://w7.pngwing.com/pngs/63/822/png-transparent-mulan-mulan-miscellaneous-hand-cartoon.png"
          },
          "weight": {
            "type": "decimal",
            "example": "45"
          },
          "movies": {
            "type": "array",
            "example": "[5]"
          }
        }
      },
      "allCharacter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Simba"
          },
          "picture": {
            "type": "string",
            "example": "https://static.wikia.nocookie.net/videojuego/images/8/8e/Simba_adulto.jpg"
          }
        }
      },
      "CharacterById": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example":"1"
          },
          "name": {
            "type": "string",
            "example": "Simba"
          },
          "age": {
            "type": "string",
            "example": "Adulto"
          },
          "weight": {
            "type": "date",
            "example": "84"
          },
          "history": {
            "type": "text",
            "example": "Hijo de Mufasa y Sarabi, Simba fue el siguiente a su padre en la línea para gobernar las Tierras del Reino. Sin embargo, después de que su malvado tío Scar asesinó a Mufasa y culpó a Simba por la muerte del antiguo rey, el joven cachorro de león es condenado al exilio mientras que Scar gobierna como rey. Fue entonces cuando Simba regresó a las Tierras del Reino y reclamó su trono y lugar legítimo en el gran ciclo de la vida"
          },
          "picture": {
            "type": "string",
            "example": "https://static.wikia.nocookie.net/videojuego/images/8/8e/Simba_adulto.jpg"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-02-11T22:15:38.000Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-02-11T22:15:38.000Z"
          },
          "Movies": {
            "type": "array",
            "example": [
              {
                  "id": 1,
                  "title": "The Lion King",
                  "picture": "https://www.themoviedb.org/t/p/original/zRIram9fBEL3yCMh4gSPwfYpzY.jpg",
                  "creation_date": "1994-06-24T03:00:00.000Z",
                  "score": "4"
              }
            ]
          }
        }
      },
      "CharacterBodyUpdate": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Mickey Mouse"
          },
          "picture": {
            "type": "string",
             "example": "https://static.wikia.nocookie.net/disney/images/c/cb/Mulan_ver1_xlg.jpg/revision/latest?cb=20160923003413&path-prefix=es"
          },
          "age": {
            "type": "string",
            "example": "adulto"
          },
          "weight": {
            "type": "string",
            "example": "50"
          },
          "movies": {
            "type": "array",
            "example": [3,5]
          }
        }
      },
      "allTypes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "type": {
            "type": "string",
            "example": "Serie"
          }
        }
      },
      "Type": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Serie"
          }
        }
      },
      "TypeById": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example":"1"
          },
          "type": {
            "type": "string",
            "example": "Serie"
          },
          "createdAt": {
            "type": "date",
            "example": "2022-02-11T22:15:38.000Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-02-11T22:15:38.000Z"
          }
        }
      },
      "TypeBodyUpdate": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Serie"
          }
        }
      },
      "Users": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "2"
          },
          "name": {
            "type": "string",
            "example": "Javier"
          },
          "last": {
            "type": "string",
            "example": "Perez"
          },
          "email": {
            "type": "string",
            "example": "0.6333065036502268@email.com.ar"
          },
          "birthdate": {
            "type": "date",
            "example": "2001-06-16T03:00:00.000Z"
          },
          "password": {
            "type": "string",
            "example": "$2asddflO1o8iLy3ZTXDlFEawVWMOhzIS3za1GYtmQF5NyuB7.kos77/fdQ6"
          },
          "rol": {
            "type": "string",
            "example": "USER_ROLE"
          },
          "enable": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "date",
            "example": "2022-01-13T22:03:53.859Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-01-13T22:03:53.859Z"
          }
        }
      },
      "UserBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Javier"
          },
          "last": {
            "type": "string",
            "example": "Perez"
          },
          "email": {
            "type": "string",
            "example": "random@email.com.ar"
          },
          "birthdate": {
            "type": "date",
            "example": "06-16-2001"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "rol": {
            "type": "string",
            "example": "USER_ROLE"
          }
        }
      },
      "UserBodyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Javier"
          },
          "last": {
            "type": "string",
            "example": "Perez"
          },
          "birthdate": {
            "type": "date",
            "example": "06-16-2001"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "rol": {
            "type": "string",
            "example": "USER_ROLE"
          }
        }
      },
      "AuthLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@email.com.ar"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
